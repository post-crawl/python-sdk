name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  UV_CACHE_DIR: /tmp/.uv-cache

permissions:
  contents: read

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.20"
          enable-cache: true
      
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: uv sync --frozen --all-extras
      
      - name: Run tests
        run: uv run --frozen pytest tests/ -v
      
      - name: Minimize uv cache
        run: uv cache prune --ci

  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.20"
          enable-cache: true
      
      - name: Set up Python
        run: uv python install
      
      - name: Install dependencies
        run: uv sync --frozen --all-extras
      
      - name: Format check with ruff
        run: uv run ruff format --check .
      
      - name: Lint with ruff
        run: uv run ruff check .
      
      - name: Type check with mypy
        run: uv run mypy src/postcrawl
      
      - name: Minimize uv cache
        run: uv cache prune --ci

  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.20"
          enable-cache: true
      
      - name: Set up Python
        run: uv python install
      
      - name: Build package
        run: uv build
      
      - name: Store distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      
      - name: Verify package
        run: |
          # Test package installation in an isolated environment
          uv run --with postcrawl --no-project --refresh-package postcrawl -- python -c "import postcrawl; print('✓ Package import successful')"
          uv run --with postcrawl --no-project -- python -c "from postcrawl import PostCrawlClient; print('✓ Client import successful')"
      
      - name: Minimize uv cache
        run: uv cache prune --ci

  check:
    name: Check all CI passed
    if: always()
    needs: [test, lint, build]
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether all CI jobs succeeded
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}